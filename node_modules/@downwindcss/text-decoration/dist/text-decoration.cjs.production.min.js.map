{"version":3,"file":"text-decoration.cjs.production.min.js","sources":["../src/rules/textDecorationRule.ts","../src/rules/lineRules.ts","../src/rules/styleRules.ts","../src/textDecoration.ts","../src/rules/buildColorRules.ts","../src/constants.ts","../src/rules/buildThicknessRules.ts","../src/index.ts"],"sourcesContent":["const textDecorationRule = {\n  '.text-decoration': {\n    '--dw-td-overline': 'var(--tw-empty,/*!*/ /*!*/)',\n    '--dw-td-underline': 'var(--tw-empty,/*!*/ /*!*/)',\n    '--dw-td-line-through': 'var(--tw-empty,/*!*/ /*!*/)',\n    '--dw-td-none': 'var(--tw-empty,/*!*/ /*!*/)',\n\n    // Default values from MDN: https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration#formal_definition\n    '--dw-td-color': 'currentcolor',\n    '--dw-td-style': 'initial',\n    '--dw-td-thickness': '1px',\n\n    'text-decoration-line': [\n      'var(--dw-td-overline)',\n      'var(--dw-td-underline)',\n      'var(--dw-td-line-through)',\n      'var(--dw-td-none)',\n    ].join(' '),\n\n    'text-decoration-color': 'var(--dw-td-color)',\n    'text-decoration-style': 'var(--dw-td-style)',\n    'text-decoration-thickness': 'var(--dw-td-thickness)',\n  },\n};\n\nexport default textDecorationRule;\n","import { internalPrefix } from '../constants';\n\nconst lineRules = {\n  [`.${internalPrefix}underline`]: { '--dw-td-underline': 'underline' },\n  [`.${internalPrefix}overline`]: { '--dw-td-overline': 'overline' },\n  [`.${internalPrefix}line-through`]: {\n    '--dw-td-line-through': 'line-through',\n  },\n  [`.${internalPrefix}none`]: { '--dw-td-none': 'none' },\n};\n\nexport default lineRules;\n","import { internalPrefix } from '../constants';\n\nconst styleRules = {\n  [`.${internalPrefix}solid`]: { '--dw-td-style': 'solid' },\n  [`.${internalPrefix}double`]: { '--dw-td-style': 'double' },\n  [`.${internalPrefix}dotted`]: { '--dw-td-style': 'dotted' },\n  [`.${internalPrefix}dashed`]: { '--dw-td-style': 'dashed' },\n  [`.${internalPrefix}wavy`]: { '--dw-td-style': 'wavy' },\n  [`.${internalPrefix}initial`]: { '--dw-td-style': 'initial' },\n  [`.${internalPrefix}inherit`]: { '--dw-td-style': 'inherit' },\n};\n\nexport default styleRules;\n","import textDecorationRule from './rules/textDecorationRule';\nimport lineRules from './rules/lineRules';\nimport styleRules from './rules/styleRules';\nimport buildColorRules from './rules/buildColorRules';\nimport buildThicknessRules from './rules/buildThicknessRules';\n\nimport { PluginType } from './types';\n\nconst plugin = require('tailwindcss/plugin');\n\nfunction textDecoration({ addUtilities, variants, theme, e }: PluginType) {\n  const themeColors = theme('textDecorationPlugin.colors');\n  const themeThicknesses = theme('textDecorationPlugin.thicknesses');\n  const customVariants = variants('textDecorationPlugin');\n\n  const colorRules = buildColorRules(themeColors, e);\n  const thicknessRules = buildThicknessRules(themeThicknesses, e);\n\n  addUtilities(\n    [textDecorationRule, lineRules, styleRules, colorRules, thicknessRules],\n    { variants: customVariants }\n  );\n}\n\nconst defaultTextDecoration = {\n  theme: {\n    textDecorationPlugin: (theme: any) => ({\n      colors: theme('colors'),\n      thicknesses: {\n        1: '1px',\n        2: '2px',\n        4: '4px',\n        8: '8px',\n      },\n    }),\n  },\n  variants: {\n    textDecorationPlugin: ['responsive'],\n  },\n};\n\nexport default plugin(textDecoration, defaultTextDecoration);\n","import { Escape } from '../types';\nimport { internalPrefix } from '../constants';\n\n// Returns an array of\nconst buildColorRules = (themeColors: any, e: Escape) =>\n  Object.keys(themeColors).reduce((result, themeColorName) => {\n    // if color is an object(containing, 50, 100, etc) then,\n    //    create an array of objects\n    // if color contains a string, then just add it to the result\n    const themeColorValue = themeColors[themeColorName];\n    const colorContainsMultipleValues = !(typeof themeColorValue === 'string');\n\n    if (colorContainsMultipleValues) {\n      Object.keys(themeColorValue).forEach(colorValueName => {\n        const key = `.${e(\n          `${internalPrefix}${themeColorName}-${colorValueName}`\n        )}`;\n        const value = { '--dw-td-color': themeColorValue[colorValueName] };\n        result[key] = value;\n      });\n    } else {\n      const key = `.${e(`${internalPrefix}${themeColorName}`)}`;\n      const value = { '--dw-td-color': themeColorValue };\n      result[key] = value;\n    }\n    return result;\n  }, {} as Record<string, { '--dw-td-color': string }>);\n\nexport default buildColorRules;\n","export const internalPrefix = 'text-decoration-';\n","import { Escape } from '../types';\nimport { internalPrefix } from '../constants';\n\nconst buildThicknessRules = (\n  thicknesses: Record<string, string>,\n  e: Escape\n) => {\n  return Object.keys(thicknesses).reduce((result: any, thickness) => {\n    const key = `.${e(`${internalPrefix}${thickness}`)}`;\n    result[key] = { '--dw-td-thickness': thicknesses[thickness] };\n    return result;\n  }, {});\n};\n\nexport default buildThicknessRules;\n","import textDecoration from './textDecoration';\n\nmodule.exports = textDecoration;\n"],"names":["textDecorationRule","join","lineRules","styleRules","textDecoration","addUtilities","variants","theme","e","themeColors","themeThicknesses","customVariants","colorRules","Object","keys","reduce","result","themeColorName","themeColorValue","forEach","colorValueName","key","buildColorRules","thicknessRules","thicknesses","thickness","buildThicknessRules","module","exports","require","plugin","textDecorationPlugin","colors"],"mappings":"aAAA,QAAMA,EAAqB,oBACL,oBACE,kDACC,qDACG,6CACR,8CAGC,+BACA,8BACI,6BAEG,CACtB,wBACA,yBACA,4BACA,qBACAC,KAAK,6BAEkB,6CACA,iDACI,2BCnB3BC,wCAC6B,qBAAuB,4CACxB,oBAAsB,+CAClB,wBACV,2CAEE,gBAAkB,WCN1CC,oCACyB,iBAAmB,sCAClB,iBAAmB,uCACnB,iBAAmB,uCACnB,iBAAmB,qCACrB,iBAAmB,sCAChB,iBAAmB,yCACnB,iBAAmB,cCCpD,SAASC,SAAiBC,IAAAA,aAAcC,IAAAA,SAAUC,IAAAA,MAAOC,IAAAA,EACjDC,EAAcF,EAAM,+BACpBG,EAAmBH,EAAM,oCACzBI,EAAiBL,EAAS,wBAE1BM,ECXgB,SAACH,EAAkBD,UACzCK,OAAOC,KAAKL,GAAaM,QAAO,SAACC,EAAQC,OAIjCC,EAAkBT,EAAYQ,MAC6B,iBAApBC,EAG3CL,OAAOC,KAAKI,GAAiBC,SAAQ,SAAAC,OAC7BC,MAAUb,ECdM,mBDeAS,MAAkBG,GAGxCJ,EAAOK,GADO,iBAAmBH,EAAgBE,WAG9C,KACCC,MAAUb,ECrBQ,mBDqBcS,GAEtCD,EAAOK,GADO,iBAAmBH,UAG5BF,IACN,IDXgBM,CAAgBb,EAAaD,GAC1Ce,EGboB,SAC1BC,EACAhB,UAEOK,OAAOC,KAAKU,GAAaT,QAAO,SAACC,EAAaS,UAEnDT,MADgBR,EDRU,mBCQYiB,IACxB,qBAAuBD,EAAYC,IAC1CT,IACN,IHKoBU,CAAoBhB,EAAkBF,GAE7DH,EACE,CAACL,EAAoBE,EAAWC,EAAYS,EAAYW,GACxD,CAAEjB,SAAUK,IIlBhBgB,OAAOC,QJMQC,QAAQ,qBAiCRC,CAAO1B,EAjBQ,CAC5BG,MAAO,CACLwB,qBAAsB,SAACxB,SAAgB,CACrCyB,OAAQzB,EAAM,UACdiB,YAAa,GACR,QACA,QACA,QACA,UAITlB,SAAU,CACRyB,qBAAsB,CAAC"}